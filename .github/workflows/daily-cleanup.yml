---
name: Daily cleanup cluster

on:
  workflow_dispatch:
    inputs:
      max_age_hours_cluster:
        description: "Maximum age of clusters in hours"
        required: true
        default: "20"

  schedule:
    - cron: '0 1 * * *' # At 01:00 everyday.

env:
  MAX_AGE_HOURS_CLUSTER: "${{ github.event.inputs.max_age_hours_cluster || '20' }}"
  AWS_PROFILE: "infex"

  # please keep those variables synced with tests.yml
  TESTS_AWS_REGION: "eu-west-2"
  TF_S3_BUCKET: "camunda-tf-rosa"

  ASSIGNEES_ISSUE_ERROR: "Langleu, leiicamundi"

jobs:

  cleanup-clusters:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0

      - name: Install tooling using asdf
        uses: asdf-vm/actions/install@05e0d2ed97b598bfce82fd30daf324ae0c4570e6 # v3

      - name: Use repo .tool-version as global version
        run: cp .tool-versions ~/.tool-versions

      - name: Import Secrets
        id: secrets
        uses: hashicorp/vault-action@d1720f055e0635fd932a1d2a48f87a666a57906c # v3
        with:
          url: ${{ secrets.VAULT_ADDR }}
          method: approle
          roleId: ${{ secrets.VAULT_ROLE_ID }}
          secretId: ${{ secrets.VAULT_SECRET_ID }}
          exportEnv: false
          secrets: |
            secret/data/products/infrastructure-experience/ci/common AWS_ACCESS_KEY;
            secret/data/products/infrastructure-experience/ci/common AWS_SECRET_KEY;
            secret/data/products/infrastructure-experience/ci/common RH_OPENSHIFT_TOKEN;

      # Official action does not support profiles
      - name: Add profile credentials to ~/.aws/credentials
        run: |
          aws configure set aws_access_key_id ${{ steps.secrets.outputs.AWS_ACCESS_KEY }} --profile ${{ env.AWS_PROFILE }}
          aws configure set aws_secret_access_key ${{ steps.secrets.outputs.AWS_SECRET_KEY }} --profile ${{ env.AWS_PROFILE }}
          aws configure set region ${{ env.TESTS_AWS_REGION }} --profile ${{ env.AWS_PROFILE }}

      - name: Delete clusters
        id: delete_clusters
        timeout-minutes: 125
        uses: ./.github/actions/rosa-cleanup-clusters
        env:
          RH_TOKEN: "${{ steps.secrets.outputs.RH_OPENSHIFT_TOKEN }}"
          AWS_REGION: "${{ env.TESTS_AWS_REGION }}"
        with:
          tf-bucket: "${{ env.TF_S3_BUCKET }}"
          max-age-hours-cluster: "${{ env.MAX_AGE_HOURS_CLUSTER }}"

      - name: Close issue in case of success
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WORKFLOW_URL: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
        run: |
          issue_url=$(gh --repo "${{ github.repository }}" search issues  "Failed to cleanup clusters" --state=open --label="schedule" --json 'url' | jq '.[0].url' -r)

          if [ "$issue_url" != "null" ]; then
            gh issue close --comment "Auto-closing issue as the cleanup has been successfuly ran in ${{ env.WORKFLOW_URL }}." "$issue_url"
          else
            echo "No open issues found with the specified criteria."
          fi

      - name: Create issue on failure
        if: failure()
        uses: JasonEtco/create-an-issue@1b14a70e4d8dc185e5cc76d3bec9eab20257b2c5 # v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WORKFLOW_URL: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
        with:
          assignees: "${{ env.ASSIGNEES_ISSUE_ERROR }}"
          update_existing: true
          search_existing: open
          filename: .github/templates/issue_delete_clusters_failed.md
